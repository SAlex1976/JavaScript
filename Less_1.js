// Task 1
var tC = 23;
var tF = (9 / 5) * tC + 32;
alert('Temp C = ' + tC + ' Temp F = ' + tF);

// Task 2
var name = "Василий";
var admin = name;
alert (admin);

// Task 3
/*
JS-выражение 1000 + "108" будет равно 1000108
 */


// Task 4
/*
Атрибуты defer и async сообщают браузеру, что он должен продолжать обрабатывать страницу.

Скрипт с атрибутом defer всегда выполняется, когда дерево DOM готово, но до события DOMContentLoaded.
Скрипты defer сохраняют порядок очередности относительно друг друга и выполнятся в таком порядке как и обычные скрипты
даже если первый скрипт загрузится позже следующего.

Атрибут async означает, что скрипт абсолютно независим.
Страница не ждёт асинхронных скриптов, содержимое обрабатывается и отображается.
Событие DOMContentLoaded и асинхронные скрипты не ждут друг друга
DOMContentLoaded может произойти как до асинхронного скрипта (если асинхронный скрипт завершит загрузку после того,
как страница будет готова), так и после асинхронного скрипта (если он короткий или уже содержится в HTTP-кеше)
Остальные скрипты не ждут async, и скрипты casync не ждут другие скрипты.
Асинхронные скрипты очень полезны для добавления на страницу сторонних скриптов: счётчиков, рекламы и т.д.
*/
